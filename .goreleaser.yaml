version: 2
report_sizes: true

before:
  hooks:
    - go mod tidy
    - curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b dist/
    - export PATH=$PATH:$CWD/dist

gomod:
  proxy: true
  mod: mod
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org
    - GOPRIVATE=github.com/jimmystewpot/dns-preload

builds:
  - id: "dns-preload"
    main: ./cmd/dns-preload
    binary: "dns-preload"
    flags:
      - -trimpath
      - -buildvcs=true
    ldflags:
      - -w -s
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
      - freebsd
      - linux
      - netbsd
      - openbsd
      - windows

    goarch:
      - amd64
      - arm
      - arm64

    goarm:
      - 6
      - 7

    goamd64:
      - v1

    ignore:
      - goos: darwin
        goarch: arm
        goarm: 6
      - goos: darwin
        goarch: arm
        goarm: 7


    mod_timestamp: "{{ .CommitTimestamp }}"
    skip: false
    no_unique_dist_dir: false
    no_main_check: true

checksum:
  name_template: '{{ .ArtifactName }}.{{ .Algorithm }}'
  algorithm: sha256
  split: true
  disable: false
  extra_files:
    - glob: LICENSE

release:
  mode: append
  skip_upload: false

sboms:
  - id: dns-preload

    documents:
      - "${artifact}.spdx.sbom.json"

    # Path to the SBOM generator command
    #
    # Note: the process CWD will be set to the same location as "dist"
    #
    # Default: 'syft'.
    cmd: syft

    args: ["$artifact", "--output", "spdx-json=$document"]

    env:
      - SYFT_GOLANG_SEARCH_LOCAL_MOD_CACHE_LICENSES=true
      - SYFT_GOLANG_SEARCH_REMOTE_LICENSES=true

    # Which artifacts to catalog.
    #
    # Valid options are:
    # - any:        let the SBOM tool decide which artifacts available in
    #               the cwd should be cataloged
    # - source:     source archive
    # - package:    Linux packages (deb, rpm, apk, etc)
    # - installer:  Windows MSI installers (Pro only)
    # - diskimage:  macOS DMG disk images (Pro only)
    # - archive:    archives from archive pipe
    # - binary:     binaries output from the build stage
    #
    # Default: 'archive'.
    artifacts: binary

    # IDs of the artifacts to catalog.
    #
    # If `artifacts` is "source" or "any" then this fields has no effect.
    #ids:
    #  - foo
    #   - bar